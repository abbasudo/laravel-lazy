<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use App\Models\{{modelName}};
use Illuminate\Http\Request;

class {{modelName}}Controller extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\JsonResponse
     */
    public function index()
    {
        $data    = {{modelName}}::all();
        $message = trans('message.{{modelNameSingularLowerCase}}.index');
        $status  = 'success';

        return response()->json(compact(['data' , 'message' , 'status']) , 200);
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function store(Request $request)
    {
        $attributes = $request->validate([

        ]);

        $data    = {{modelName}}::create($attributes);
        $message = trans('message.{{modelNameSingularLowerCase}}.create');
        $status  = 'success';

        return response()->json(compact(['data' , 'message' , 'status']) , 201);
    }

    /**
     * Display the specified resource.
     *
     * @param  \App\Models\{{modelName}}  ${{modelNameSingularLowerCase}}
     * @return \Illuminate\Http\JsonResponse
     */
    public function show({{modelName}} ${{modelNameSingularLowerCase}})
    {
        $data    = ${{modelNameSingularLowerCase}};
        $message = trans('message.{{modelNameSingularLowerCase}}.show');
        $status  = 'success';

        return response()->json(compact(['data' , 'message' , 'status']) , 200);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \App\Models\{{modelName}}  ${{modelNameSingularLowerCase}}
     * @return \Illuminate\Http\JsonResponse
     */
    public function update(Request $request, {{modelName}} ${{modelNameSingularLowerCase}})
    {
        $attributes = $request->validate([

        ]);

		${{modelNameSingularLowerCase}}->update($attributes);

        $data    = ${{modelNameSingularLowerCase}};
        $message = trans('message.{{modelNameSingularLowerCase}}.update');
        $status  = 'success';

        return response()->json(compact(['data' , 'message' , 'status']) , 202);
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \App\Models\{{modelName}}  ${{modelNameSingularLowerCase}}
     * @return \Illuminate\Http\JsonResponse
     */
    public function destroy({{modelName}} ${{modelNameSingularLowerCase}})
    {
        try {
            ${{modelNameSingularLowerCase}}->delete();

        } catch (\Exception $exception) {

            $data    = $exception;
            $message = trans('message.{{modelNameSingularLowerCase}}.destroy.fail');
            $status  = 'failed';

            return response()->json(compact(['data', 'message', 'status']) , 422);
        }

        $data    = null;
        $message = trans('message.{{modelNameSingularLowerCase}}.destroy.success');
        $status  = 'success';

        return response()->json(compact(['data', 'message', 'status']), 202);
    }
}
